# [PARSER]
#     Name        nginx
#     Format      regex
#     Regex       ^(?<remote>[^ ]*) - (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)? (?<uri>\S+)? (?<protocol>\S+)?" (?<status>[0-9]{3}) (?<size>[0-9]+) "(?<referrer>[^\"]*)" "(?<agent>[^\"]*)"
#     Time_Key    time
#     Time_Format %d/%b/%Y:%H:%M:%S %z

[PARSER]
    Name        nginx
    # Change Format from 'regex' to 'json' because NGINX is now outputting JSON.
    Format      json
    # No Regex needed when Format is json, as it parses the JSON structure directly.

    # Update Time_Key to match the JSON field name for the timestamp.
    Time_Key    @timestamp
    # Update Time_Format to match the Unix epoch timestamp with milliseconds.
    # %s for seconds since epoch, %L for milliseconds (if needed, otherwise just %s if it's integer seconds).
    # Since your @timestamp is 1749528332.0 (float), %s.%L is appropriate.
    Time_Format %s.%L

    # Optional: If you want to rename fields or perform other manipulations,
    # you can add a 'JSON_Standard' key or use a 'FILTER' with 'LUA' or 'MODIFY' later.
    # For basic parsing, 'Format json' is sufficient.