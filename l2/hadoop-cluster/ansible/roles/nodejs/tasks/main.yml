#SPDX-License-Identifier: MIT-0
---
# tasks file for nodejs

- name: Ensure Python 3 'distro' package is installed (for ansible_distribution)
  # This is helpful for older Ubuntu systems or minimal installations where 'distro' might be missing,
  # which Ansible uses for robust OS detection.
  ansible.builtin.raw: "test -e /usr/bin/python3 || (apt update && apt install -y python3)"
  when: ansible_os_family == 'Debian' # Ubuntu falls under the Debian family
  changed_when: false
  failed_when: false

- name: Gather facts again after ensuring python3-distro
  ansible.builtin.setup:
    gather_subset:
      - "min"
      - "distribution"
  # This ensures ansible_os_family and ansible_distribution are accurate
  # after potentially installing Python's 'distro' module.

- name: Install dependencies for NodeSource PPA
  ansible.builtin.apt:
    name:
      - curl
      - gnupg
    state: present
    update_cache: yes

- name: Add NodeSource GPG key
  # Downloads the GPG key and adds it to the system's keyring.
  ansible.builtin.shell: "curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/nodesource.gpg >/dev/null"
  args:
    creates: /etc/apt/keyrings/nodesource.gpg # Prevents running if the key already exists

- name: Add NodeSource repository
  # Adds the official NodeSource repository to your APT sources.
  ansible.builtin.shell: "echo 'deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_{{ nodejs_version }} nodistro main' | sudo tee /etc/apt/sources.list.d/nodesource.list >/dev/null"
  args:
    creates: /etc/apt/sources.list.d/nodesource.list # Prevents running if the repo file already exists

- name: Update apt cache after adding NodeSource repo
  # Updates the package list to include packages from the newly added repository.
  ansible.builtin.apt:
    update_cache: yes

- name: Install Node.js and npm
  # Installs the nodejs package, which includes npm (Node Package Manager).
  ansible.builtin.apt:
    name: nodejs
    state: present

- name: Verify Node.js installation
  # Checks the installed Node.js version.
  ansible.builtin.command: node -v
  register: node_version_output
  changed_when: false # This task doesn't change system state

- name: Verify npm installation
  # Checks the installed npm version.
  ansible.builtin.command: npm -v
  register: npm_version_output
  changed_when: false # This task doesn't change system state

- name: Display Node.js and npm versions
  # Prints the installed versions to the Ansible output.
  ansible.builtin.debug:
    msg: |
      Node.js version: {{ node_version_output.stdout }}
      npm version: {{ npm_version_output.stdout }}
